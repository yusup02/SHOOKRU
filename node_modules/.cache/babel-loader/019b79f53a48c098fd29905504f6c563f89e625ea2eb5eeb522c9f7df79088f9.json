{"ast":null,"code":"import _regeneratorRuntime from\"/Users/ymmirzayev/shookru/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/ymmirzayev/shookru/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/ymmirzayev/shookru/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import'./index.css';import logo from'./logo.svg';import{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function LoginForm(){//Здесь мы наблюдаем состояние хуков имени пользователя, пароля и ошибки, используя useState библиотеки из React.\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),username=_useState2[0],setUsername=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];//Функция handleSubmit вызвался при отправке формы.\n// Она сначала отменяет действие по умолчанию (обновление страницы) с помощью метода preventDefault().\nvar handleSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(event){var response,errorData;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:event.preventDefault();setError('');//Затем мы отправляем запрос POST на указанный адрес, используя fetch.\n// В телезапросе мы отправляем JSON, запрашиваем имя пользователя и пароль, которые были введены в форме.\n_context.prev=2;_context.next=5;return fetch(\"https://fp-services.ru/installment/login\",{method:\"POST\",body:JSON.stringify({Login:username,Password:password}),headers:{'Access-Control-Allow-Origin':'null',\"Content-type\":\"application/json\"}});case 5:response=_context.sent;if(!response.ok){_context.next=10;break;}// Авторизация прошла успешно, переходим на следующую страницу\nwindow.location.href='./sert.html';_context.next=14;break;case 10:_context.next=12;return response.json();case 12:errorData=_context.sent;setError(errorData.error);case 14:_context.next=21;break;case 16:_context.prev=16;_context.t0=_context[\"catch\"](2);console.error('Ошибка авторизации:',_context.t0);setError('Произошла ошибка при авторизации');alert('Произошла ошибка при авторизации');case 21:case\"end\":return _context.stop();}},_callee,null,[[2,16]]);}));return function handleSubmit(_x){return _ref.apply(this,arguments);};}();//Возвращаемые элементы JSX имеют формы input, button и div, которые имеют классы CSS.\n// Обратите внимание, что значение каждого входа связано с соответствующим состоянием хуком.\n// Если в состоянии хуке ошибка есть сообщение об этом, то мы выводим его на страницу.\nreturn/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"container\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text\",children:\"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"}),/*#__PURE__*/_jsx(\"input\",{className:\"inpu login\",type:\"text\",placeholder:\"\\u041B\\u043E\\u0433\\u0438\\u043D\",value:username,onChange:function onChange(event){return setUsername(event.target.value);},required:true}),/*#__PURE__*/_jsx(\"input\",{className:\"inpu password\",type:\"password\",placeholder:\"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",value:password,onChange:function onChange(event){return setPassword(event.target.value);},required:true}),/*#__PURE__*/_jsx(\"div\",{className:\"button\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"\\u0412\\u043E\\u0439\\u0442\\u0438\"})}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:error})]});}export default LoginForm;","map":{"version":3,"names":["logo","useState","jsx","_jsx","jsxs","_jsxs","LoginForm","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","_useState5","_useState6","error","setError","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","response","errorData","wrap","_callee$","_context","prev","next","preventDefault","fetch","method","body","JSON","stringify","Login","Password","headers","sent","ok","window","location","href","json","t0","console","alert","stop","_x","apply","arguments","onSubmit","className","children","type","placeholder","value","onChange","target","required"],"sources":["/Users/ymmirzayev/shookru/src/App.js"],"sourcesContent":["\nimport './index.css';\nimport logo from './logo.svg';\nimport { useState } from 'react';\n\n\n\nfunction LoginForm() {\n\n  //Здесь мы наблюдаем состояние хуков имени пользователя, пароля и ошибки, используя useState библиотеки из React.\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  //Функция handleSubmit вызвался при отправке формы.\n  // Она сначала отменяет действие по умолчанию (обновление страницы) с помощью метода preventDefault().\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setError('');\n\n    //Затем мы отправляем запрос POST на указанный адрес, используя fetch.\n    // В телезапросе мы отправляем JSON, запрашиваем имя пользователя и пароль, которые были введены в форме.\n    try {\n    \n      // const response = await fetch('https://fp-services.ru/installment/login2', {\n      //   method: 'POST',\n      //   headers: {\n      //     \"Content-type\": \"application/json; charset=UTF-8\"\n      //   },\n      //   body: {\n      //     \"login\": \"login\",\n      //     \"password\": \"password\"\n      //   }\n\n\n      // });\n\nconst response = await fetch(\"https://fp-services.ru/installment/login\", {\n  method: \"POST\",\n  body: JSON.stringify({\n    Login: username,\n    Password: password\n  }),\n  headers: {\n    'Access-Control-Allow-Origin': 'null',\n    \"Content-type\": \"application/json\"\n  }\n});\n      \n\n      //Если ответ сервера содержит код 200, то авторизация прошла успешно и мы перешли на страницу \"sert.html\".\n      // В случае если мы обработаем сообщение об ошибке.\n      if (response.ok) {\n        // Авторизация прошла успешно, переходим на следующую страницу\n        window.location.href = './sert.html';\n      } else {\n        // Обрабатываем ошибку авторизации\n        const errorData = await response.json();\n        setError(errorData.error);\n      }\n\n      //Если возникла какая-либо ошибка при выполнении запроса,\n      // то мы выводим сообщение об оплате в консоль и включает значение ошибки состояния.\n    } catch (error) {\n      console.error('Ошибка авторизации:', error);\n      setError('Произошла ошибка при авторизации');\n\n      alert('Произошла ошибка при авторизации');\n    }\n  }\n\n\n  //Возвращаемые элементы JSX имеют формы input, button и div, которые имеют классы CSS.\n  // Обратите внимание, что значение каждого входа связано с соответствующим состоянием хуком.\n  // Если в состоянии хуке ошибка есть сообщение об этом, то мы выводим его на страницу.\n  return (\n    <form onSubmit={handleSubmit} className=\"container\">\n      <h3 className=\"text\">Авторизация</h3>\n      <input\n        className=\"inpu login\"\n        type=\"text\"\n        placeholder=\"Логин\"\n        value={username}\n        onChange={(event) => setUsername(event.target.value)}\n        required\n      />\n      <input\n        className=\"inpu password\"\n        type=\"password\"\n        placeholder=\"Пароль\"\n        value={password}\n        onChange={(event) => setPassword(event.target.value)}\n        required\n      />\n      <div className=\"button\">\n        <button type=\"submit\"\n        >Войти</button>\n      </div>\n      {error && <p className=\"error\">{error}</p>}\n    </form>\n  );\n}\n\nexport default LoginForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}