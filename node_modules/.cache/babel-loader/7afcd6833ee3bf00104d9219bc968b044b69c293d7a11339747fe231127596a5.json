{"ast":null,"code":"var _jsxFileName = \"/Users/ymmirzayev/shookru/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginForm() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setError('');\n    try {\n      const response = await fetch('https://fp-services.ru/installment/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (response.ok) {\n        // Авторизация прошла успешно, переходим на следующую страницу\n        window.location.href = '/sert.html';\n      } else {\n        // Обрабатываем ошибку авторизации\n        const errorData = await response.json();\n        setError(errorData.error);\n      }\n    } catch (error) {\n      console.error('Ошибка авторизации:', error);\n      setError('Произошла ошибка при авторизации');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text\",\n      children: \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input login\",\n      type: \"text\",\n      placeholder: \"\\u041B\\u043E\\u0433\\u0438\\u043D\",\n      value: username,\n      onChange: event => setUsername(event.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input password\",\n      type: \"password\",\n      placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n      value: password,\n      onChange: event => setPassword(event.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginForm, \"lABZ+K3zbnEaFQvlduiFXLNOf5A=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["logo","useState","jsxDEV","_jsxDEV","LoginForm","_s","username","setUsername","password","setPassword","error","setError","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","window","location","href","errorData","json","console","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/Users/ymmirzayev/shookru/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\n\n\nfunction LoginForm() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setError('');\n\n    try {\n      const response = await fetch('https://fp-services.ru/installment/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ username, password })\n      });\n\n      if (response.ok) {\n        // Авторизация прошла успешно, переходим на следующую страницу\n        window.location.href = '/sert.html';\n      } else {\n        // Обрабатываем ошибку авторизации\n        const errorData = await response.json();\n        setError(errorData.error);\n      }\n    } catch (error) {\n      console.error('Ошибка авторизации:', error);\n      setError('Произошла ошибка при авторизации');\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className=\"container\">\n      <h3 className=\"text\">Авторизация</h3>\n      <input\n        className=\"input login\"\n        type=\"text\"\n        placeholder=\"Логин\"\n        value={username}\n        onChange={(event) => setUsername(event.target.value)}\n        required\n      />\n      <input\n        className=\"input password\"\n        type=\"password\"\n        placeholder=\"Пароль\"\n        value={password}\n        onChange={(event) => setPassword(event.target.value)}\n        required\n      />\n      <div className=\"button\">\n        <button type=\"submit\">Войти</button>\n      </div>\n      {error && <p className=\"error\">{error}</p>}\n    </form>\n  );\n}\n\nexport default LoginForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}