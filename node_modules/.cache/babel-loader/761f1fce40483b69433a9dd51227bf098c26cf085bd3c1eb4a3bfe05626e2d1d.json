{"ast":null,"code":"var _jsxFileName = \"/Users/ymmirzayev/shookru/src/spisok.js\",\n  _s = $RefreshSig$();\nimport './index.css';\nimport { useNavigate } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Spisok() {\n  _s();\n  //     const navigate = useNavigate();\n  // try {\n\n  //     const response = await fetch(\"https://fp-services.ru/installment/courses/get-list\"), {\n  //       method: \"GET\",\n  //       headers: {\n  //         \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVSUQiOiIxZWRlYTU0Ni1lNzMzLTY2NTAtYTVkOC0wNTA0MjRlZTdhMDQiLCJleHAiOjE2ODQyMzM2NDd9.ormT9keDJy-W9VGbq4eJyCJejNjns1tdiA9Hw56zyfQ\"\n  //       }\n  //     }\n\n  // }\n\n  // if (response.ok) {\n  //     // Авторизация прошла успешно, переходим на следующую страницу\n  //     // window.location.href = './main.html';\n\n  //     const data = await response.json();\n  //     localStorage.setItem('userName', data.Data.Name);\n  //     localStorage.setItem('token', data.Data.Token);\n  //     console.log(data)\n  //     navigate('/main', { replace: true });\n  //   }\n\n  //   const [dataList, setDataList] = useState([]);\n\n  //   useEffect(() => {\n  //     const fetchData = async () => {\n  //       try {\n  //         const response = await fetch('https://fp-services.ru/installment/courses/get-list');\n  //         if (response.ok) {\n  //           const data = await response.json();\n  //           setDataList(data);\n\n  //         } else {\n  //           throw new Error('Ошибка получения данных');\n  //         }\n  //       } catch (error) {\n  //         console.error('Произошла ошибка:', error);\n  //       }\n  //     };\n\n  //     fetchData();\n  //   }, []);\n\n  //   return (\n  //     <ul>\n  //       {dataList.map((item) => (\n  //         <li key={item.id}>{item.name}</li>\n  //       ))}\n  //     </ul>\n  //   );\n\n  const [courses, setCourses] = useState([]);\n  useEffect(() => {\n    const fetchCourses = async () => {\n      try {\n        const token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVSUQiOiIxZWRlYTU0Ni1lNzMzLTY2NTAtYTVkOC0wNTA0MjRlZTdhMDQiLCJleHAiOjE2ODQyNDc4ODl9.CL3f2OEkEJV7bJZll6LKUHN6w3Rb7QZLJeYEA3x9Lt8\"; // Замените на свой токен\n        const response = await fetch('https://fp-services.ru/installment/courses/get-list', {\n          method: 'GET',\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.ok) {\n          const dat = await response.json();\n          setCourses(dat.Data);\n          console.log(data);\n        } else {\n          throw new Error('Ошибка получения списка курсов');\n        }\n      } catch (error) {\n        console.error('Произошла ошибка:', error);\n      }\n    };\n    fetchCourses();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: courses.map(course => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: course.Name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0426\\u0435\\u043D\\u0430: \", course.Price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041F\\u0440\\u043E\\u0434\\u043E\\u043B\\u0436\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u044C: \", course.Duration]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: course.Description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this)]\n    }, course.CourseUID, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n_s(Spisok, \"Ks3haE1eP87BHv/TJ29co0rtnQM=\");\n_c = Spisok;\nexport default Spisok;\nvar _c;\n$RefreshReg$(_c, \"Spisok\");","map":{"version":3,"names":["useNavigate","React","useEffect","useState","jsxDEV","_jsxDEV","Spisok","_s","courses","setCourses","fetchCourses","token","response","fetch","method","headers","Authorization","ok","dat","json","Data","console","log","data","Error","error","children","map","course","Name","fileName","_jsxFileName","lineNumber","columnNumber","Price","Duration","Description","CourseUID","_c","$RefreshReg$"],"sources":["/Users/ymmirzayev/shookru/src/spisok.js"],"sourcesContent":["\nimport './index.css';\nimport { useNavigate } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\n\n\n\nfunction Spisok() {\n    //     const navigate = useNavigate();\n    // try {\n\n    //     const response = await fetch(\"https://fp-services.ru/installment/courses/get-list\"), {\n    //       method: \"GET\",\n    //       headers: {\n    //         \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVSUQiOiIxZWRlYTU0Ni1lNzMzLTY2NTAtYTVkOC0wNTA0MjRlZTdhMDQiLCJleHAiOjE2ODQyMzM2NDd9.ormT9keDJy-W9VGbq4eJyCJejNjns1tdiA9Hw56zyfQ\"\n    //       }\n    //     }\n\n\n    // }\n\n    // if (response.ok) {\n    //     // Авторизация прошла успешно, переходим на следующую страницу\n    //     // window.location.href = './main.html';\n\n    //     const data = await response.json();\n    //     localStorage.setItem('userName', data.Data.Name);\n    //     localStorage.setItem('token', data.Data.Token);\n    //     console.log(data)\n    //     navigate('/main', { replace: true });\n    //   }\n\n    //   const [dataList, setDataList] = useState([]);\n\n    //   useEffect(() => {\n    //     const fetchData = async () => {\n    //       try {\n    //         const response = await fetch('https://fp-services.ru/installment/courses/get-list');\n    //         if (response.ok) {\n    //           const data = await response.json();\n    //           setDataList(data);\n\n    //         } else {\n    //           throw new Error('Ошибка получения данных');\n    //         }\n    //       } catch (error) {\n    //         console.error('Произошла ошибка:', error);\n    //       }\n    //     };\n\n    //     fetchData();\n    //   }, []);\n\n    //   return (\n    //     <ul>\n    //       {dataList.map((item) => (\n    //         <li key={item.id}>{item.name}</li>\n    //       ))}\n    //     </ul>\n    //   );\n\n    const [courses, setCourses] = useState([]);\n\n    useEffect(() => {\n        const fetchCourses = async () => {\n            try {\n                const token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVSUQiOiIxZWRlYTU0Ni1lNzMzLTY2NTAtYTVkOC0wNTA0MjRlZTdhMDQiLCJleHAiOjE2ODQyNDc4ODl9.CL3f2OEkEJV7bJZll6LKUHN6w3Rb7QZLJeYEA3x9Lt8\"; // Замените на свой токен\n                const response = await fetch('https://fp-services.ru/installment/courses/get-list', {\n                    method: 'GET',\n                    headers: {\n                        Authorization: `Bearer ${token}`\n                    }\n                });\n\n                if (response.ok) {\n                    const dat = await response.json();\n                    setCourses(dat.Data);\n                    console.log(data);\n                } else {\n                    throw new Error('Ошибка получения списка курсов');\n                }\n            } catch (error) {\n                console.error('Произошла ошибка:', error);\n            }\n        };\n\n        fetchCourses();\n    }, []);\n\n    return (\n        <ul>\n            {courses.map((course) => (\n                <li key={course.CourseUID}>\n                    <h3>{course.Name}</h3>\n                    <p>Цена: {course.Price}</p>\n                    <p>Продолжительность: {course.Duration}</p>\n                    <p>{course.Description}</p>\n                </li>\n            ))}\n        </ul>\n    );\n}\n\n\nexport default Spisok;"],"mappings":";;AACA,OAAO,aAAa;AACpB,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAInD,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACd;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAGA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACZ,MAAMQ,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACA,MAAMC,KAAK,GAAG,uKAAuK,CAAC,CAAC;QACvL,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qDAAqD,EAAE;UAChFC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACLC,aAAa,EAAG,UAASL,KAAM;UACnC;QACJ,CAAC,CAAC;QAEF,IAAIC,QAAQ,CAACK,EAAE,EAAE;UACb,MAAMC,GAAG,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;UACjCV,UAAU,CAACS,GAAG,CAACE,IAAI,CAAC;UACpBC,OAAO,CAACC,GAAG,CAACC,IAAI,CAAC;QACrB,CAAC,MAAM;UACH,MAAM,IAAIC,KAAK,CAAC,gCAAgC,CAAC;QACrD;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZJ,OAAO,CAACI,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MAC7C;IACJ,CAAC;IAEDf,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAAqB,QAAA,EACKlB,OAAO,CAACmB,GAAG,CAAEC,MAAM,iBAChBvB,OAAA;MAAAqB,QAAA,gBACIrB,OAAA;QAAAqB,QAAA,EAAKE,MAAM,CAACC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACtB5B,OAAA;QAAAqB,QAAA,GAAG,4BAAM,EAACE,MAAM,CAACM,KAAK;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3B5B,OAAA;QAAAqB,QAAA,GAAG,0GAAmB,EAACE,MAAM,CAACO,QAAQ;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3C5B,OAAA;QAAAqB,QAAA,EAAIE,MAAM,CAACQ;MAAW;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAJtBL,MAAM,CAACS,SAAS;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKrB,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEb;AAAC1B,EAAA,CA9FQD,MAAM;AAAAgC,EAAA,GAANhC,MAAM;AAiGf,eAAeA,MAAM;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}