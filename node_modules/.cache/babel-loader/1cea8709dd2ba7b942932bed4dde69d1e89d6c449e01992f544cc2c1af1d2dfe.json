{"ast":null,"code":"var _jsxFileName = \"/Users/ymmirzayev/shookru/src/Login.js\",\n  _s2 = $RefreshSig$();\nimport './index.css';\nimport logo from './logo.svg';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s2();\n  var _s = $RefreshSig$();\n  //Здесь мы наблюдаем состояние хуков имени пользователя, пароля и ошибки, используя useState библиотеки из React.\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  //Функция handleSubmit вызвался при отправке формы.\n  // Она сначала отменяет действие по умолчанию (обновление страницы) с помощью метода preventDefault().\n  const handleSubmit = async event => {\n    _s();\n    event.preventDefault();\n    setError('');\n\n    //Затем мы отправляем запрос POST на указанный адрес, используя fetch.\n    // В телезапросе мы отправляем JSON, запрашиваем имя пользователя и пароль, которые были введены в форме.\n    try {\n      const response = await fetch(\"https://fp-services.ru/installment/users/login\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          Login: username,\n          Password: password\n        }),\n        headers: {\n          'Access-Control-Allow-Origin': 'null',\n          \"Content-type\": \"application/json\"\n        }\n      });\n\n      //Если ответ сервера содержит код 200, то авторизация прошла успешно и мы перешли на страницу \"sert.html\".\n      // В случае если мы обработаем сообщение об ошибке.\n      if (response.ok) {\n        // Авторизация прошла успешно, переходим на следующую страницу\n        // window.location.href = './main.html';\n\n        const data = await response.json();\n        localStorage.setItem('userName', data.Data.Name);\n        localStorage.setItem('token', data.Data.Token);\n        const userName = localStorage.getItem('userName');\n        const token = localStorage.getItem('token');\n        console.log(\"Данные из памяти \" + token);\n        const navigate = useNavigate();\n        navigate('/about', {\n          replace: true\n        });\n      } else {\n        // Обрабатываем ошибку авторизации\n        const errorData = await response.json();\n        setError(errorData.error);\n        console.error('Ошибка авторизации:', errorData.Error);\n        alert('Произошла ошибка при авторизации\\n' + errorData.Error);\n      }\n\n      //Если возникла какая-либо ошибка при выполнении запроса,\n      // то мы выводим сообщение об оплате в консоль и включает значение ошибки состояния.\n    } catch (error) {\n      console.error('Ошибка авторизации:', error);\n      setError('Произошла ошибка при авторизации');\n      alert('Произошла ошибка при авторизации');\n    }\n  };\n\n  //Возвращаемые элементы JSX имеют формы input, button и div, которые имеют классы CSS.\n  // Обратите внимание, что значение каждого входа связано с соответствующим состоянием хуком.\n  // Если в состоянии хуке ошибка есть сообщение об этом, то мы выводим его на страницу.\n  _s(handleSubmit, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n    return [useNavigate];\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text\",\n      children: \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"inpu login\",\n      type: \"text\",\n      placeholder: \"\\u041B\\u043E\\u0433\\u0438\\u043D\",\n      value: username,\n      onChange: event => setUsername(event.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"inpu password\",\n      type: \"password\",\n      placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n      value: password,\n      onChange: event => setPassword(event.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s2(Login, \"lABZ+K3zbnEaFQvlduiFXLNOf5A=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["logo","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s2","_s","$RefreshSig$","username","setUsername","password","setPassword","error","setError","handleSubmit","event","preventDefault","response","fetch","method","body","JSON","stringify","Password","headers","ok","data","json","localStorage","setItem","Data","Name","Token","userName","getItem","token","console","log","navigate","replace","errorData","Error","alert","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/Users/ymmirzayev/shookru/src/Login.js"],"sourcesContent":["\nimport './index.css';\nimport logo from './logo.svg';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n\nfunction Login() {\n\n  //Здесь мы наблюдаем состояние хуков имени пользователя, пароля и ошибки, используя useState библиотеки из React.\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  //Функция handleSubmit вызвался при отправке формы.\n  // Она сначала отменяет действие по умолчанию (обновление страницы) с помощью метода preventDefault().\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setError('');\n\n    //Затем мы отправляем запрос POST на указанный адрес, используя fetch.\n    // В телезапросе мы отправляем JSON, запрашиваем имя пользователя и пароль, которые были введены в форме.\n    try {\n    \nconst response = await fetch(\"https://fp-services.ru/installment/users/login\", {\n  method: \"POST\",\n  body: JSON.stringify({\n    Login: username,\n    Password: password\n  }),\n  headers: {\n    'Access-Control-Allow-Origin': 'null',\n    \"Content-type\": \"application/json\"\n  }\n});\n      \n\n      //Если ответ сервера содержит код 200, то авторизация прошла успешно и мы перешли на страницу \"sert.html\".\n      // В случае если мы обработаем сообщение об ошибке.\n      if (response.ok) {\n        // Авторизация прошла успешно, переходим на следующую страницу\n        // window.location.href = './main.html';\n\n        const data = await response.json();\n\n        localStorage.setItem('userName', data.Data.Name);\n        localStorage.setItem('token', data.Data.Token);\n\n        const userName = localStorage.getItem('userName');\n        const token = localStorage.getItem('token');\n\n        console.log(\"Данные из памяти \" + token);\n\n        const navigate = useNavigate();\n\n        navigate('/about', { replace: true });\n\n\n      } else {\n        // Обрабатываем ошибку авторизации\n        const errorData = await response.json();\n        setError(errorData.error);\n\n        console.error('Ошибка авторизации:', errorData.Error);\n\n        alert('Произошла ошибка при авторизации\\n' + errorData.Error);\n\n      }\n\n      //Если возникла какая-либо ошибка при выполнении запроса,\n      // то мы выводим сообщение об оплате в консоль и включает значение ошибки состояния.\n    } catch (error) {\n      console.error('Ошибка авторизации:', error);\n      setError('Произошла ошибка при авторизации');\n\n      alert('Произошла ошибка при авторизации');\n    }\n  }\n\n\n  //Возвращаемые элементы JSX имеют формы input, button и div, которые имеют классы CSS.\n  // Обратите внимание, что значение каждого входа связано с соответствующим состоянием хуком.\n  // Если в состоянии хуке ошибка есть сообщение об этом, то мы выводим его на страницу.\n  return (\n    <form onSubmit={handleSubmit} className=\"container\">\n      <h3 className=\"text\">Авторизация</h3>\n      <input\n        className=\"inpu login\"\n        type=\"text\"\n        placeholder=\"Логин\"\n        value={username}\n        onChange={(event) => setUsername(event.target.value)}\n        required\n      />\n      <input\n        className=\"inpu password\"\n        type=\"password\"\n        placeholder=\"Пароль\"\n        value={password}\n        onChange={(event) => setPassword(event.target.value)}\n        required\n      />\n      <div className=\"button\">\n        <button type=\"submit\"\n        >Войти</button>\n      </div>\n      {error && <p className=\"error\">{error}</p>}\n    </form>\n  );\n}\n\nexport default Login;\n"],"mappings":";;AACA,OAAO,aAAa;AACpB,OAAOA,IAAI,MAAM,YAAY;AAC7B,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG/C,SAASC,KAAKA,CAAA,EAAG;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAEf;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA;EACA,MAAMc,YAAY,GAAG,MAAOC,KAAK,IAAK;IAAAT,EAAA;IACpCS,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBH,QAAQ,CAAC,EAAE,CAAC;;IAEZ;IACA;IACA,IAAI;MAER,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,gDAAgD,EAAE;QAC7EC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBlB,KAAK,EAAEI,QAAQ;UACfe,QAAQ,EAAEb;QACZ,CAAC,CAAC;QACFc,OAAO,EAAE;UACP,6BAA6B,EAAE,MAAM;UACrC,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;;MAGI;MACA;MACA,IAAIP,QAAQ,CAACQ,EAAE,EAAE;QACf;QACA;;QAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;QAElCC,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEH,IAAI,CAACI,IAAI,CAACC,IAAI,CAAC;QAChDH,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,IAAI,CAACI,IAAI,CAACE,KAAK,CAAC;QAE9C,MAAMC,QAAQ,GAAGL,YAAY,CAACM,OAAO,CAAC,UAAU,CAAC;QACjD,MAAMC,KAAK,GAAGP,YAAY,CAACM,OAAO,CAAC,OAAO,CAAC;QAE3CE,OAAO,CAACC,GAAG,CAAC,mBAAmB,GAAGF,KAAK,CAAC;QAExC,MAAMG,QAAQ,GAAGrC,WAAW,CAAC,CAAC;QAE9BqC,QAAQ,CAAC,QAAQ,EAAE;UAAEC,OAAO,EAAE;QAAK,CAAC,CAAC;MAGvC,CAAC,MAAM;QACL;QACA,MAAMC,SAAS,GAAG,MAAMvB,QAAQ,CAACU,IAAI,CAAC,CAAC;QACvCd,QAAQ,CAAC2B,SAAS,CAAC5B,KAAK,CAAC;QAEzBwB,OAAO,CAACxB,KAAK,CAAC,qBAAqB,EAAE4B,SAAS,CAACC,KAAK,CAAC;QAErDC,KAAK,CAAC,oCAAoC,GAAGF,SAAS,CAACC,KAAK,CAAC;MAE/D;;MAEA;MACA;IACF,CAAC,CAAC,OAAO7B,KAAK,EAAE;MACdwB,OAAO,CAACxB,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3CC,QAAQ,CAAC,kCAAkC,CAAC;MAE5C6B,KAAK,CAAC,kCAAkC,CAAC;IAC3C;EACF,CAAC;;EAGD;EACA;EACA;EAAApC,EAAA,CAlEMQ,YAAY;IAAA,QAqCKb,WAAW;EAAA;EA8BlC,oBACEE,OAAA;IAAMwC,QAAQ,EAAE7B,YAAa;IAAC8B,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACjD1C,OAAA;MAAIyC,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrC9C,OAAA;MACEyC,SAAS,EAAC,YAAY;MACtBM,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,gCAAO;MACnBC,KAAK,EAAE5C,QAAS;MAChB6C,QAAQ,EAAGtC,KAAK,IAAKN,WAAW,CAACM,KAAK,CAACuC,MAAM,CAACF,KAAK,CAAE;MACrDG,QAAQ;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF9C,OAAA;MACEyC,SAAS,EAAC,eAAe;MACzBM,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,sCAAQ;MACpBC,KAAK,EAAE1C,QAAS;MAChB2C,QAAQ,EAAGtC,KAAK,IAAKJ,WAAW,CAACI,KAAK,CAACuC,MAAM,CAACF,KAAK,CAAE;MACrDG,QAAQ;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF9C,OAAA;MAAKyC,SAAS,EAAC,QAAQ;MAAAC,QAAA,eACrB1C,OAAA;QAAQ+C,IAAI,EAAC,QAAQ;QAAAL,QAAA,EACpB;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,EACLrC,KAAK,iBAAIT,OAAA;MAAGyC,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAEjC;IAAK;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEX;AAAC5C,GAAA,CAtGQD,KAAK;AAAAoD,EAAA,GAALpD,KAAK;AAwGd,eAAeA,KAAK;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}