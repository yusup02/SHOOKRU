{"ast":null,"code":"var _jsxFileName = \"/Users/ymmirzayev/shookru/src/Login.js\",\n  _s = $RefreshSig$();\nimport './index.css';\nimport logo from './logo.svg';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  console.log('Login:');\n\n  //Здесь мы наблюдаем состояние хуков имени пользователя, пароля и ошибки, используя useState библиотеки из React.\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [errorModal, setErrorModal] = useState({\n    isOpen: false,\n    errorText: ''\n  });\n  const navigate = useNavigate();\n\n  //Функция handleSubmit вызвался при отправке формы.\n  // Она сначала отменяет действие по умолчанию (обновление страницы) с помощью метода preventDefault().\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setError('');\n\n    //Затем мы отправляем запрос POST на указанный адрес, используя fetch.\n    // В телезапросе мы отправляем JSON, запрашиваем имя пользователя и пароль, которые были введены в форме.\n    try {\n      const response = await fetch(\"https://fp-services.ru/installment/users/login\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          Login: username,\n          Password: password\n        }),\n        headers: {\n          'Access-Control-Allow-Origin': 'null',\n          \"Content-type\": \"application/json\"\n        }\n      });\n\n      //Если ответ сервера содержит код 200, то авторизация прошла успешно и мы перешли на страницу \"sert.html\".\n      // В случае если мы обработаем сообщение об ошибке.\n      if (response.ok) {\n        // Авторизация прошла успешно, переходим на следующую страницу\n        // window.location.href = './main.html';\n\n        const data = await response.json();\n        localStorage.setItem('userName', data.Data.Name); // сохраняет локально переданное знаение\n        localStorage.setItem('token', data.Data.Token);\n        console.log(data);\n        navigate('/main', {\n          replace: true\n        });\n      } else {\n        // Обрабатываем ошибку авторизации\n        const errorData = await response.json();\n        setError(errorData.error);\n        console.error('Ошибка авторизации:', errorData.Error);\n        alert('Произошла ошибка при авторизации\\n' + errorData.Error);\n        setErrorModal({\n          isOpen: true,\n          errorText: errorData\n        });\n      }\n\n      //Если возникла какая-либо ошибка при выполнении запроса,\n      // то мы выводим сообщение об оплате в консоль и включает значение ошибки состояния.\n    } catch (error) {\n      console.error('Ошибка авторизации:', error);\n      setError('Произошла ошибка при авторизации');\n      alert('Произошла ошибка при авторизации');\n      setErrorModal({\n        isOpen: true,\n        errorText: error\n      });\n    }\n  };\n  const handleClose = () => {\n    window.location.reload();\n  };\n\n  //Возвращаемые элементы JSX имеют формы input, button и div, которые имеют классы CSS.\n  // Обратите внимание, что значение каждого входа связано с соответствующим состоянием хуком.\n  // Если в состоянии хуке ошибка есть сообщение об этом, то мы выводим его на страницу.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text\",\n      children: \"SHOOKRU EDUCATION\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inpu login\",\n        type: \"text\",\n        placeholder: \"\\u041B\\u043E\\u0433\\u0438\\u043D\",\n        value: username,\n        onChange: event => setUsername(event.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inpu password\",\n        type: \"password\",\n        placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n        value: password,\n        onChange: event => setPassword(event.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: errorModal.isOpen,\n        onRequestClose: handleClose,\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"modal-error\",\n          children: \" \\u041E\\u0448\\u0438\\u0431\\u043A\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"modal-text\",\n          children: errorModal.errorText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modal-button\",\n          onClick: handleClose,\n          children: \"\\u041F\\u043E\\u0432\\u0442\\u043E\\u0440\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 1\n  }, this);\n}\n_s(Login, \"SngZtmThICdjmIJ7AQS/VzR0BCA=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["logo","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","console","log","username","setUsername","password","setPassword","error","setError","errorModal","setErrorModal","isOpen","errorText","navigate","handleSubmit","event","preventDefault","response","fetch","method","body","JSON","stringify","Password","headers","ok","data","json","localStorage","setItem","Data","Name","Token","replace","errorData","Error","alert","handleClose","window","location","reload","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","Modal","onRequestClose","onClick","_c","$RefreshReg$"],"sources":["/Users/ymmirzayev/shookru/src/Login.js"],"sourcesContent":["\nimport './index.css';\nimport logo from './logo.svg';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nfunction Login() {\n\n  console.log('Login:');\n\n\n  //Здесь мы наблюдаем состояние хуков имени пользователя, пароля и ошибки, используя useState библиотеки из React.\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [errorModal, setErrorModal] = useState(\n    {\n        isOpen: false,\n        errorText: ''\n    });\n\n \n\n  const navigate = useNavigate();\n\n  //Функция handleSubmit вызвался при отправке формы.\n  // Она сначала отменяет действие по умолчанию (обновление страницы) с помощью метода preventDefault().\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setError('');\n\n    //Затем мы отправляем запрос POST на указанный адрес, используя fetch.\n    // В телезапросе мы отправляем JSON, запрашиваем имя пользователя и пароль, которые были введены в форме.\n    try {\n    \nconst response = await fetch(\"https://fp-services.ru/installment/users/login\", {\n  method: \"POST\",\n  body: JSON.stringify({\n    Login: username,\n    Password: password\n  }),\n  headers: {\n    'Access-Control-Allow-Origin': 'null',\n    \"Content-type\": \"application/json\"\n  }\n\n});\n      \n\n      //Если ответ сервера содержит код 200, то авторизация прошла успешно и мы перешли на страницу \"sert.html\".\n      // В случае если мы обработаем сообщение об ошибке.\n      if (response.ok) {\n        // Авторизация прошла успешно, переходим на следующую страницу\n        // window.location.href = './main.html';\n\n        const data = await response.json();\n        localStorage.setItem('userName', data.Data.Name); // сохраняет локально переданное знаение\n        localStorage.setItem('token', data.Data.Token);\n        console.log(data)\n        navigate('/main', { replace: true });\n      } else {\n        // Обрабатываем ошибку авторизации\n        const errorData = await response.json();\n        setError(errorData.error);\n\n        console.error('Ошибка авторизации:', errorData.Error);\n\n        alert('Произошла ошибка при авторизации\\n' + errorData.Error);\n        setErrorModal(\n          {\n              isOpen: true,\n              errorText: errorData\n          }\n\n      )\n\n      }\n\n      //Если возникла какая-либо ошибка при выполнении запроса,\n      // то мы выводим сообщение об оплате в консоль и включает значение ошибки состояния.\n    } catch (error) {\n      console.error('Ошибка авторизации:', error);\n      setError('Произошла ошибка при авторизации');\n\n      alert('Произошла ошибка при авторизации');\n      setErrorModal(\n        {\n            isOpen: true,\n            errorText: error\n        }\n\n    )\n    }\n  }\n\n  const handleClose = () => {\n    window.location.reload();\n};\n\n\n  //Возвращаемые элементы JSX имеют формы input, button и div, которые имеют классы CSS.\n  // Обратите внимание, что значение каждого входа связано с соответствующим состоянием хуком.\n  // Если в состоянии хуке ошибка есть сообщение об этом, то мы выводим его на страницу.\n  return (\n<div>  \n    <h3 className=\"text\">SHOOKRU EDUCATION</h3>\n    <form onSubmit={handleSubmit} className=\"container\">\n      <input\n        className=\"inpu login\"\n        type=\"text\"\n        placeholder=\"Логин\"\n        value={username}\n        onChange={(event) => setUsername(event.target.value)}\n        required\n      />\n      <input\n        className=\"inpu password\"\n        type=\"password\"\n        placeholder=\"Пароль\"\n        value={password}\n        onChange={(event) => setPassword(event.target.value)}\n        required\n      />\n      <div className=\"button\">\n        <button type=\"submit\"\n\n        >Войти</button>\n      </div>\n      {error && <p className=\"error\">{error}</p>}\n    </form>\n\n    <div>\n\n<Modal isOpen={errorModal.isOpen} onRequestClose={handleClose} className=\"modal\">\n    <h3 className='modal-error'> Ошибка</h3>\n    <p className='modal-text'>{errorModal.errorText}</p>\n    <button className='modal-button' onClick={handleClose}>Повторить</button>\n</Modal>\n</div>\n    </div>\n  );\n}\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}