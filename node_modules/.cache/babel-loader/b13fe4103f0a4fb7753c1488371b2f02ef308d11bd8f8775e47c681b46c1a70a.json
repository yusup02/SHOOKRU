{"ast":null,"code":"var _jsxFileName = \"/Users/ymmirzayev/shookru/src/courseDetails.js\",\n  _s = $RefreshSig$();\nimport './index.css';\nimport { useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport React, { useEffect } from 'react';\nimport axios from 'axios';\nimport Modal from 'react-modal';\nimport { Link } from 'react-router-dom';\nimport Create from './create';\nimport Back from './Back.png';\nimport Main from './main';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CurseDetails() {\n  _s();\n  var userName = localStorage.getItem('userName');\n  const token = localStorage.getItem('token');\n  var userName = localStorage.getItem('userName');\n  const navigate = useNavigate();\n  const [students, setStudents] = useState([]);\n  const [courseData, setCourseData] = useState();\n  const {\n    courseUID\n  } = useParams();\n  const [errorModal, setErrorModal] = useState({\n    isOpen: false,\n    errorText: ''\n  });\n  function handleGoBack() {\n    navigate('/main'); // Переход на страницу \"main\"\n  }\n\n  function handleClick(event) {\n    navigate('/');\n  }\n  useEffect(() => {\n    getRates();\n  }, []);\n  async function getRates() {\n    console.log(courseUID);\n    const dataFetch = async () => {\n      const data = await (await fetch(\"https://run.mocky.io/v3/b3bcb9d2-d8e9-43c5-bfb7-0062c85be6f9\")).json();\n\n      // set state when the data received\n      setCourseData(data);\n      console.log(courseData);\n    };\n    dataFetch();\n\n    // try {\n    //     const response = await fetch(`https://fp-services.ru/installment/courses/get?course_uid=${courseUID}`, {\n    //         method: \"GET\",\n    //         headers: {\n    //             \"Authorization\": `Bearer ${token}`\n    //         }\n    //     });\n    //     if (response.ok) {\n    //         const data = await response.json();\n\n    //         console.log(data.Data);\n\n    //         // setStudents(data.Data.Students);\n\n    //         setCourseData(data);\n\n    //         console.log(courseData)\n    //     } else {\n    //         const errorData = await response.json();\n    //         console.error('CurseDetails error', errorData);\n    //         setErrorModal({\n    //             isOpen: true,\n    //             errorText: errorData,\n    //         });\n    //     }\n    // } catch (error) {\n    //     console.error('Ошибка:', error);\n    // }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"header-text\",\n          children: \"SHOOKRU EDUCATION\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-back\",\n          onClick: handleGoBack,\n          children: \" \\u041D\\u0430\\u0437\\u0430\\u0434\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"Name\",\n          children: userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"header-button\",\n          type: \"button\",\n          onClick: handleClick,\n          children: \"\\u0412\\u044B\\u0439\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\\u043E\\u0432:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n}\n_s(CurseDetails, \"2tq1epIREgVoI52Hiv+IjgeKyvM=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = CurseDetails;\nexport default CurseDetails;\nvar _c;\n$RefreshReg$(_c, \"CurseDetails\");","map":{"version":3,"names":["useNavigate","useState","React","useEffect","axios","Modal","Link","Create","Back","Main","useParams","jsxDEV","_jsxDEV","CurseDetails","_s","userName","localStorage","getItem","token","navigate","students","setStudents","courseData","setCourseData","courseUID","errorModal","setErrorModal","isOpen","errorText","handleGoBack","handleClick","event","getRates","console","log","dataFetch","data","fetch","json","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","_c","$RefreshReg$"],"sources":["/Users/ymmirzayev/shookru/src/courseDetails.js"],"sourcesContent":["import './index.css';\nimport { useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport React, { useEffect } from 'react';\nimport axios from 'axios';\nimport Modal from 'react-modal';\nimport { Link } from 'react-router-dom';\nimport Create from './create';\nimport Back from './Back.png'\nimport Main from './main';\nimport { useParams } from 'react-router-dom';\n\nfunction CurseDetails() {\n\n\n    var userName = localStorage.getItem('userName');\n    const token = localStorage.getItem('token');\n    var userName = localStorage.getItem('userName');\n    const navigate = useNavigate();\n    const [students, setStudents] = useState([]);\n    const [courseData, setCourseData] = useState();\n    const { courseUID } = useParams();\n    const [errorModal, setErrorModal] = useState(\n        {\n            isOpen: false,\n            errorText: ''\n        });\n\n    function handleGoBack() {\n        navigate('/main'); // Переход на страницу \"main\"\n    }\n\n    function handleClick(event) {\n        navigate('/');\n    }\n\n    useEffect(() => {\n        getRates();\n    }, []);\n\n\n    async function getRates() {\n        \n        console.log(courseUID);\n\n        const dataFetch = async () => {\n            const data = await (\n              await fetch(\n                \"https://run.mocky.io/v3/b3bcb9d2-d8e9-43c5-bfb7-0062c85be6f9\"\n              )\n            ).json();\n      \n            // set state when the data received\n            setCourseData(data);\n\n            console.log(courseData);\n          };\n\n          dataFetch();\n\n        // try {\n        //     const response = await fetch(`https://fp-services.ru/installment/courses/get?course_uid=${courseUID}`, {\n        //         method: \"GET\",\n        //         headers: {\n        //             \"Authorization\": `Bearer ${token}`\n        //         }\n        //     });\n        //     if (response.ok) {\n        //         const data = await response.json();\n\n        //         console.log(data.Data);\n\n        //         // setStudents(data.Data.Students);\n\n        //         setCourseData(data);\n\n        //         console.log(courseData)\n        //     } else {\n        //         const errorData = await response.json();\n        //         console.error('CurseDetails error', errorData);\n        //         setErrorModal({\n        //             isOpen: true,\n        //             errorText: errorData,\n        //         });\n        //     }\n        // } catch (error) {\n        //     console.error('Ошибка:', error);\n        // }\n\n    } \n\n\n    return (\n        <div className='main'>\n            {/* Шапка сайта */}\n            <div className='header'>\n                <div className='header-title'>\n                    <div className='logo'></div>\n                    <h3 className='header-text'>SHOOKRU EDUCATION</h3>\n                    <button className='button-back' onClick={handleGoBack}> Назад</button>\n                </div>\n\n                <div className='header-inner'>\n                    <h5 className='Name'>{userName}</h5>\n                    <button className='header-button' type=\"button\" onClick={handleClick}>Выйти</button>\n                </div>\n            </div>\n\n\n             <div>\n      <h2>Список элементов:</h2>\n    \n    </div>\n\n\n    {/* <table className='table'>\n                <thead className='table_thead'>\n                    <tr>\n                        <th className='table_th'>Имя студента</th>\n                        <th className='table_th'>Price</th>\n                        <th className='table_th'>Дата начала</th>\n                        <th className='table_th'>Cskrf</th>\n                        <th className='table_th'>SumNeed</th>\n                        <th className='table_th'>IsEnrolled</th>\n                        <th className='table_th'>IsCancelled</th>\n                        <th className='table_th'>InstallmentLink</th>\n                    </tr>\n                </thead>\n\n             \n                    <tbody>\n                        \n                        {Object.keys(courseData).map((сource, index) => (\n                            <tr key={index}>\n                                    <td className='table_td'>{сource.Name}</td>\n                                    <td className='table_td'>{сource.Price} ₽</td>\n                                    <td className='table_td'>{сource.Duration}</td>\n                                    <td className='table_td'>{сource.SumNeed}</td>\n                                    <td className='table_td'>{сource.Description}</td>\n                                    <td className='table_td'>{сource.SourceLink}</td>\n                                    <td className='table_td'>{сource.InstallmentLink}</td>\n                                    <td className='table_td'>{сource.CreatedAt}</td>\n            \n            \n                                </tr>\n            \n                            ))\n                        }\n                    </tbody>\n                \n\n            </table> */}\n\n            {/* <table className='table'>\n                <thead className='table_thead'>\n                    <tr>\n                        <th className='table_th'>Имя студента</th>\n                        <th className='table_th'>Дата начала</th>\n                        <th className='table_th'>SumNeed</th>\n                        <th className='table_th'>IsEnrolled</th>\n                        <th className='table_th'>IsCancelled</th>\n                    </tr>\n                </thead>\n\n                {courseData.Data.Students !== null && (\n                    <tbody>\n                        {\n                            courseData.Data.Students.map((сource, index) => (\n                                <tr key={index}>\n                                    <td className='table_td'>{сource.Name}</td>\n                                    <td className='table_td'>{сource.DateStart}</td>\n                                    <td className='table_td'>{сource.SumNeed}</td>\n                                    <td className='table_td'>{сource.IsEnrolled}</td>\n                                    <td className='table_td'>{сource.IsCancelled}</td>\n            \n                                </tr>\n            \n                            ))\n                        }\n                    </tbody>\n                )}\n\n            </table> */}\n\n        </div>\n    );\n}\n\nexport default CurseDetails;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}