{"ast":null,"code":"var _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\nfunction App() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch('https://fp-services.ru/installment/users/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          Login: username,\n          Password: password\n        })\n      });\n      if (response.ok) {\n        const {\n          Data\n        } = await response.json();\n        localStorage.setItem('token', Data.Token);\n        localStorage.setItem('user', Data.Name);\n        setError('');\n        window.location.href = '/next-page.html';\n      } else {\n        const {\n          Error\n        } = await response.json();\n        setError(Error);\n      }\n    } catch (error) {\n      setError('Server error');\n    }\n  };\n}\n_s(App, \"lABZ+K3zbnEaFQvlduiFXLNOf5A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useState","App","_s","username","setUsername","password","setPassword","error","setError","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","Login","Password","ok","Data","json","localStorage","setItem","Token","Name","window","location","href","Error","_c","$RefreshReg$"],"sources":["/Users/ymmirzayev/shookru/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\n\n\nfunction App() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const response = await fetch('https://fp-services.ru/installment/users/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          Login: username,\n          Password: password\n        })\n      });\n\n      if (response.ok) {\n        const { Data } = await response.json();\n        localStorage.setItem('token', Data.Token);\n        localStorage.setItem('user', Data.Name);\n        setError('');\n        window.location.href = '/next-page.html';\n      } else {\n        const { Error } = await response.json();\n        setError(Error);\n      }\n    } catch (error) {\n      setError('Server error');\n    }\n  };\n\n}\n\nexport default App;\n\n\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,SAASC,QAAQ,QAAQ,OAAO;AAGhC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gDAAgD,EAAE;QAC7EC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,KAAK,EAAEhB,QAAQ;UACfiB,QAAQ,EAAEf;QACZ,CAAC;MACH,CAAC,CAAC;MAEF,IAAIO,QAAQ,CAACS,EAAE,EAAE;QACf,MAAM;UAAEC;QAAK,CAAC,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;QACtCC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,IAAI,CAACI,KAAK,CAAC;QACzCF,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEH,IAAI,CAACK,IAAI,CAAC;QACvCnB,QAAQ,CAAC,EAAE,CAAC;QACZoB,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,iBAAiB;MAC1C,CAAC,MAAM;QACL,MAAM;UAAEC;QAAM,CAAC,GAAG,MAAMnB,QAAQ,CAACW,IAAI,CAAC,CAAC;QACvCf,QAAQ,CAACuB,KAAK,CAAC;MACjB;IACF,CAAC,CAAC,OAAOxB,KAAK,EAAE;MACdC,QAAQ,CAAC,cAAc,CAAC;IAC1B;EACF,CAAC;AAEH;AAACN,EAAA,CAnCQD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AAqCZ,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}