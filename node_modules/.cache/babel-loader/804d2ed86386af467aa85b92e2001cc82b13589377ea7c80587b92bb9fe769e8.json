{"ast":null,"code":"\n// import './index.css';\n// import { useNavigate } from 'react-router-dom';\n// import { useState } from 'react';\n\n// import React, { useEffect } from 'react';\n// import axios from 'axios';\n// import Modal from 'react-modal';\n// import { token, getRates } from './main';\n// import userName from './Login';\n// import { Link } from 'react-router-dom';\n\n// function Create({ isModalOpen, handleClick }) {\n//   const [newRate, setNewRate] = useState({\n//     Name: '',\n//     ShortID: uniqueId(),\n//     Price: 0,\n//     Duration: '',\n//     SourceLink: \"\",\n//     Description: ''\n// });\n// // function closeModal() {\n// //   setIsModalOpen(false);\n// // }\n\n// // function handleCreateClick() {\n// //   setIsModalOpen(true);\n// // }\n\n//   async function createRate() {\n\n//     try {\n//         const response = await fetch(\"https://fp-services.ru/installment/courses/create\", {\n//             method: \"POST\",\n//             headers: {\n//                 \"Authorization\": `Bearer ${token}`,\n//                 \"Content-Type\": \"application/json\"\n//             },\n//             body: JSON.stringify(newRate) // Отправляем данные нового курса\n//         });\n\n//         if (response.ok) {\n//             const data = await response.json();\n\n//             console.log(data);\n\n//             // Обновляем список курсов после успешного создания\n//             getRates();\n//         } else {\n//             const errorData = await response.json();\n//             console.error('Ошибка создания курса:', errorData);\n//         }\n//     } catch (error) {\n//         console.error('Ошибка:', error);\n//     }\n// }\n\n// //   function handleCancelClick() {\n// //     setIsModalOpen(false);\n// //     setNewRate({\n// //         Name: '',\n// //         ShortID: uniqueId(),\n// //         Price: 0,\n// //         Duration: '',\n// //         Description: ''\n// //     });\n// // }\n\n//   function uniqueId() {\n//     const dateString = Date.now().toString(36);\n//     const randomness = Math.random().toString(36)\n//     return dateString + randomness;\n//   };\n\n//   function handleSaveClick() {\n//     createRate();\n//     setIsModalOpen(false);\n//     setNewRate({\n//         Name: '',\n//         ShortID: uniqueId(),\n//         Price: 0,\n//         Duration: '',\n//         Description: ''\n//     });\n// }\n\n//   function handleInputChange(event) {\n//     const { name, value } = event.target;\n//     console.log(typeof name, typeof value);\n//     setNewRate((prevRate) => ({\n//         ...prevRate,\n//         [name]: value\n//     }));\n// }\n\n// function handlePriceInputChange(event) {\n//     const { name, value } = event.target;\n//     console.log(typeof name, typeof value);\n\n//     setNewRate((prevRate) => ({\n//         ...prevRate,\n//         [name]: Number\n//     }));\n// }\n\n//   return (\n//     <div>\n//       {isModalOpen && (\n//         <div className=\"modal\">\n//           <button className='modal-cancellation' onClick={handleClick}>\n\n//             <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@48,700,0,0\" />\n\n//           </button>\n//           <div className=\"create\">\n//             <input\n//               type=\"text\"\n//               name=\"Name\"\n//               value={newRate.Name}\n//               onChange={handleInputChange}\n//               placeholder=\"Название\"\n//             />\n//             <input\n//               type=\"number\"\n//               name=\"Price\"\n//               value={newRate.Price}\n//               onChange={handlePriceInputChange}\n//               placeholder=\"Цена\"\n//             />\n//             <input\n//               type=\"text\"\n//               name=\"Duration\"\n//               value={newRate.Duration}\n//               onChange={handleInputChange}\n//               placeholder=\"Продолжительность\"\n//             />\n//             <input className='create'\n//               type=\"text\"\n//               name=\"SourceLink\"\n//               value={newRate.SourceLink}\n//               onChange={handleInputChange}\n//               placeholder=\"Cсылка\"\n//             />\n//             <input className='create-description'\n//               type=\"text\"\n//               name=\"Description\"\n//               value={newRate.Description}\n//               onChange={handleInputChange}\n//               placeholder=\"Описание\"\n//             />\n\n//             <div className='create-button'>\n//               <button onClick={handleSaveClick}>Создать</button>\n\n//             </div>\n//           </div>\n//           <div class=\"overlay\"> </div>\n//         </div>\n\n//       )}\n//     </div>\n//   );\n// }\n\n// export default Create;","map":{"version":3,"names":[],"sources":["/Users/ymmirzayev/shookru/src/create.js"],"sourcesContent":["\n// import './index.css';\n// import { useNavigate } from 'react-router-dom';\n// import { useState } from 'react';\n\n// import React, { useEffect } from 'react';\n// import axios from 'axios';\n// import Modal from 'react-modal';\n// import { token, getRates } from './main';\n// import userName from './Login';\n// import { Link } from 'react-router-dom';\n\n\n// function Create({ isModalOpen, handleClick }) {\n//   const [newRate, setNewRate] = useState({\n//     Name: '',\n//     ShortID: uniqueId(),\n//     Price: 0,\n//     Duration: '',\n//     SourceLink: \"\",\n//     Description: ''\n// });\n// // function closeModal() {\n// //   setIsModalOpen(false);\n// // }\n\n// // function handleCreateClick() {\n// //   setIsModalOpen(true);\n// // }\n\n\n//   async function createRate() {\n\n//     try {\n//         const response = await fetch(\"https://fp-services.ru/installment/courses/create\", {\n//             method: \"POST\",\n//             headers: {\n//                 \"Authorization\": `Bearer ${token}`,\n//                 \"Content-Type\": \"application/json\"\n//             },\n//             body: JSON.stringify(newRate) // Отправляем данные нового курса\n//         });\n\n//         if (response.ok) {\n//             const data = await response.json();\n\n//             console.log(data);\n\n//             // Обновляем список курсов после успешного создания\n//             getRates();\n//         } else {\n//             const errorData = await response.json();\n//             console.error('Ошибка создания курса:', errorData);\n//         }\n//     } catch (error) {\n//         console.error('Ошибка:', error);\n//     }\n// }\n\n\n\n// //   function handleCancelClick() {\n// //     setIsModalOpen(false);\n// //     setNewRate({\n// //         Name: '',\n// //         ShortID: uniqueId(),\n// //         Price: 0,\n// //         Duration: '',\n// //         Description: ''\n// //     });\n// // }\n\n//   function uniqueId() {\n//     const dateString = Date.now().toString(36);\n//     const randomness = Math.random().toString(36)\n//     return dateString + randomness;\n//   };\n\n\n\n//   function handleSaveClick() {\n//     createRate();\n//     setIsModalOpen(false);\n//     setNewRate({\n//         Name: '',\n//         ShortID: uniqueId(),\n//         Price: 0,\n//         Duration: '',\n//         Description: ''\n//     });\n// }\n\n\n//   function handleInputChange(event) {\n//     const { name, value } = event.target;\n//     console.log(typeof name, typeof value);\n//     setNewRate((prevRate) => ({\n//         ...prevRate,\n//         [name]: value\n//     }));\n// }\n\n// function handlePriceInputChange(event) {\n//     const { name, value } = event.target;\n//     console.log(typeof name, typeof value);\n\n//     setNewRate((prevRate) => ({\n//         ...prevRate,\n//         [name]: Number\n//     }));\n// }\n\n\n\n\n\n//   return (\n//     <div>\n//       {isModalOpen && (\n//         <div className=\"modal\">\n//           <button className='modal-cancellation' onClick={handleClick}>\n\n//             <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@48,700,0,0\" />\n\n\n//           </button>\n//           <div className=\"create\">\n//             <input\n//               type=\"text\"\n//               name=\"Name\"\n//               value={newRate.Name}\n//               onChange={handleInputChange}\n//               placeholder=\"Название\"\n//             />\n//             <input\n//               type=\"number\"\n//               name=\"Price\"\n//               value={newRate.Price}\n//               onChange={handlePriceInputChange}\n//               placeholder=\"Цена\"\n//             />\n//             <input\n//               type=\"text\"\n//               name=\"Duration\"\n//               value={newRate.Duration}\n//               onChange={handleInputChange}\n//               placeholder=\"Продолжительность\"\n//             />\n//             <input className='create'\n//               type=\"text\"\n//               name=\"SourceLink\"\n//               value={newRate.SourceLink}\n//               onChange={handleInputChange}\n//               placeholder=\"Cсылка\"\n//             />\n//             <input className='create-description'\n//               type=\"text\"\n//               name=\"Description\"\n//               value={newRate.Description}\n//               onChange={handleInputChange}\n//               placeholder=\"Описание\"\n//             />\n\n\n//             <div className='create-button'>\n//               <button onClick={handleSaveClick}>Создать</button>\n\n//             </div>\n//           </div>\n//           <div class=\"overlay\"> </div>\n//         </div>\n\n\n\n//       )}\n//     </div>\n//   );\n// }\n\n\n// export default Create;"],"mappings":";AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;;AAGA"},"metadata":{},"sourceType":"module","externalDependencies":[]}