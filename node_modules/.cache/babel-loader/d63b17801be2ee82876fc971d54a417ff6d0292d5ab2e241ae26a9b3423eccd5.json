{"ast":null,"code":"import logo from './logo.svg';\nimport './App.css';\nfunction App() {\n  const form = document.querySelector('form');\n  const emailInput = document.querySelector('#email');\n  const passwordInput = document.querySelector('#password');\n  form.addEventListener('submit', async event => {\n    event.preventDefault();\n    const email = emailInput.value.trim();\n    const password = passwordInput.value.trim();\n\n    // Проверяем, что поля заполнены\n    if (!email || !password) {\n      alert('Please enter email and password');\n      return;\n    }\n    const formData = new FormData(form);\n    const response = await fetch('/login', {\n      method: 'POST',\n      body: formData\n    });\n    if (response.ok) {\n      const userData = await response.json();\n      // Сохраняем информацию о пользователе в localStorage или cookie\n      localStorage.setItem('userData', JSON.stringify(userData));\n\n      // Переходим на следующую страницу\n      window.location.href = '/next-page.html';\n    } else {\n      alert('Invalid login credentials');\n    }\n  });\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","App","form","document","querySelector","emailInput","passwordInput","addEventListener","event","preventDefault","email","value","trim","password","alert","formData","FormData","response","fetch","method","body","ok","userData","json","localStorage","setItem","JSON","stringify","window","location","href","_c","$RefreshReg$"],"sources":["/Users/ymmirzayev/shookru/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  const form = document.querySelector('form');\n  const emailInput = document.querySelector('#email');\n  const passwordInput = document.querySelector('#password');\n  \n  form.addEventListener('submit', async (event) => {\n    event.preventDefault();\n  \n    const email = emailInput.value.trim();\n    const password = passwordInput.value.trim();\n  \n    // Проверяем, что поля заполнены\n    if (!email || !password) {\n      alert('Please enter email and password');\n      return;\n    }\n  \n    const formData = new FormData(form);\n    const response = await fetch('/login', {\n      method: 'POST',\n      body: formData\n    });\n  \n    if (response.ok) {\n      const userData = await response.json();\n      // Сохраняем информацию о пользователе в localStorage или cookie\n      localStorage.setItem('userData', JSON.stringify(userData));\n  \n      // Переходим на следующую страницу\n      window.location.href = '/next-page.html';\n    } else {\n      alert('Invalid login credentials');\n    }\n  });\n  \n}\n\nexport default App;\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAElB,SAASC,GAAGA,CAAA,EAAG;EACb,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;EAC3C,MAAMC,UAAU,GAAGF,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;EACnD,MAAME,aAAa,GAAGH,QAAQ,CAACC,aAAa,CAAC,WAAW,CAAC;EAEzDF,IAAI,CAACK,gBAAgB,CAAC,QAAQ,EAAE,MAAOC,KAAK,IAAK;IAC/CA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,MAAMC,KAAK,GAAGL,UAAU,CAACM,KAAK,CAACC,IAAI,CAAC,CAAC;IACrC,MAAMC,QAAQ,GAAGP,aAAa,CAACK,KAAK,CAACC,IAAI,CAAC,CAAC;;IAE3C;IACA,IAAI,CAACF,KAAK,IAAI,CAACG,QAAQ,EAAE;MACvBC,KAAK,CAAC,iCAAiC,CAAC;MACxC;IACF;IAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAACd,IAAI,CAAC;IACnC,MAAMe,QAAQ,GAAG,MAAMC,KAAK,CAAC,QAAQ,EAAE;MACrCC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEL;IACR,CAAC,CAAC;IAEF,IAAIE,QAAQ,CAACI,EAAE,EAAE;MACf,MAAMC,QAAQ,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MACtC;MACAC,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACL,QAAQ,CAAC,CAAC;;MAE1D;MACAM,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,iBAAiB;IAC1C,CAAC,MAAM;MACLhB,KAAK,CAAC,2BAA2B,CAAC;IACpC;EACF,CAAC,CAAC;AAEJ;AAACiB,EAAA,GAnCQ9B,GAAG;AAqCZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}