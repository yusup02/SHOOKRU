{"ast":null,"code":"import './index.css';\nimport { useNavigate } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\nfunction Spisok() {\n  //     const navigate = useNavigate();\n  // try {\n\n  //     const response = await fetch(\"https://fp-services.ru/installment/courses/get-list\"), {\n  //       method: \"GET\",\n  //       headers: {\n  //         \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVSUQiOiIxZWRlYTU0Ni1lNzMzLTY2NTAtYTVkOC0wNTA0MjRlZTdhMDQiLCJleHAiOjE2ODQyMzM2NDd9.ormT9keDJy-W9VGbq4eJyCJejNjns1tdiA9Hw56zyfQ\"\n  //       }\n  //     }\n\n  // }\n\n  // if (response.ok) {\n  //     // Авторизация прошла успешно, переходим на следующую страницу\n  //     // window.location.href = './main.html';\n\n  //     const data = await response.json();\n  //     localStorage.setItem('userName', data.Data.Name);\n  //     localStorage.setItem('token', data.Data.Token);\n  //     console.log(data)\n  //     navigate('/main', { replace: true });\n  //   }\n\n  //   const [dataList, setDataList] = useState([]);\n\n  //   useEffect(() => {\n  //     const fetchData = async () => {\n  //       try {\n  //         const response = await fetch('https://fp-services.ru/installment/courses/get-list');\n  //         if (response.ok) {\n  //           const data = await response.json();\n  //           setDataList(data);\n\n  //         } else {\n  //           throw new Error('Ошибка получения данных');\n  //         }\n  //       } catch (error) {\n  //         console.error('Произошла ошибка:', error);\n  //       }\n  //     };\n\n  //     fetchData();\n  //   }, []);\n\n  //   return (\n  //     <ul>\n  //       {dataList.map((item) => (\n  //         <li key={item.id}>{item.name}</li>\n  //       ))}\n  //     </ul>\n  //   );\n}\n_c = Spisok;\nexport default Spisok;\nvar _c;\n$RefreshReg$(_c, \"Spisok\");","map":{"version":3,"names":["useNavigate","React","useEffect","useState","Spisok","_c","$RefreshReg$"],"sources":["/Users/ymmirzayev/shookru/src/spisok.js"],"sourcesContent":["\nimport './index.css';\nimport { useNavigate } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\n\n\n\nfunction Spisok () {\n//     const navigate = useNavigate();\n// try {\n    \n//     const response = await fetch(\"https://fp-services.ru/installment/courses/get-list\"), {\n//       method: \"GET\",\n//       headers: {\n//         \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVSUQiOiIxZWRlYTU0Ni1lNzMzLTY2NTAtYTVkOC0wNTA0MjRlZTdhMDQiLCJleHAiOjE2ODQyMzM2NDd9.ormT9keDJy-W9VGbq4eJyCJejNjns1tdiA9Hw56zyfQ\"\n//       }\n//     }\n\n    \n// }\n\n// if (response.ok) {\n//     // Авторизация прошла успешно, переходим на следующую страницу\n//     // window.location.href = './main.html';\n\n//     const data = await response.json();\n//     localStorage.setItem('userName', data.Data.Name);\n//     localStorage.setItem('token', data.Data.Token);\n//     console.log(data)\n//     navigate('/main', { replace: true });\n//   }\n\n//   const [dataList, setDataList] = useState([]);\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const response = await fetch('https://fp-services.ru/installment/courses/get-list');\n//         if (response.ok) {\n//           const data = await response.json();\n//           setDataList(data);\n         \n//         } else {\n//           throw new Error('Ошибка получения данных');\n//         }\n//       } catch (error) {\n//         console.error('Произошла ошибка:', error);\n//       }\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   return (\n//     <ul>\n//       {dataList.map((item) => (\n//         <li key={item.id}>{item.name}</li>\n//       ))}\n//     </ul>\n//   );\n\n\n}\n\n\n    export default Spisok;"],"mappings":"AACA,OAAO,aAAa;AACpB,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAIlD,SAASC,MAAMA,CAAA,EAAI;EACnB;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAGA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;AAAA;AAGCC,EAAA,GAvDQD,MAAM;AA0DX,eAAeA,MAAM;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}