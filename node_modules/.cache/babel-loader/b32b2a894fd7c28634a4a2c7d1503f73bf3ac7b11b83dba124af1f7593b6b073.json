{"ast":null,"code":"var _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\nfunction LoginForm() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setError('');\n    try {\n      const response = await fetch('https://fp-services.ru/installment/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (response.ok) {\n        // Авторизация прошла успешно, переходим на следующую страницу\n        window.location.href = './sert.html';\n      } else {\n        // Обрабатываем ошибку авторизации\n        const errorData = await response.json();\n        setError(errorData.error);\n      }\n    } catch (error) {\n      console.error('Ошибка авторизации:', error);\n      setError('Произошла ошибка при авторизации');\n    }\n  };\n}\n_s(LoginForm, \"lABZ+K3zbnEaFQvlduiFXLNOf5A=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["logo","useState","LoginForm","_s","username","setUsername","password","setPassword","error","setError","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","window","location","href","errorData","json","console","_c","$RefreshReg$"],"sources":["/Users/ymmirzayev/shookru/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\n\n\n\nfunction LoginForm() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setError('');\n\n    try {\n      const response = await fetch('https://fp-services.ru/installment/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ username, password })\n      });\n\n      if (response.ok) {\n        // Авторизация прошла успешно, переходим на следующую страницу\n        window.location.href = './sert.html';\n      } else {\n        // Обрабатываем ошибку авторизации\n        const errorData = await response.json();\n        setError(errorData.error);\n      }\n    } catch (error) {\n      console.error('Ошибка авторизации:', error);\n      setError('Произошла ошибка при авторизации');\n    }\n  }\n\n  \n}\n\nexport default LoginForm;\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,SAASC,QAAQ,QAAQ,OAAO;AAIhC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBH,QAAQ,CAAC,EAAE,CAAC;IAEZ,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,0CAA0C,EAAE;QACvEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEf,QAAQ;UAAEE;QAAS,CAAC;MAC7C,CAAC,CAAC;MAEF,IAAIO,QAAQ,CAACO,EAAE,EAAE;QACf;QACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,aAAa;MACtC,CAAC,MAAM;QACL;QACA,MAAMC,SAAS,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;QACvChB,QAAQ,CAACe,SAAS,CAAChB,KAAK,CAAC;MAC3B;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdkB,OAAO,CAAClB,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3CC,QAAQ,CAAC,kCAAkC,CAAC;IAC9C;EACF,CAAC;AAGH;AAACN,EAAA,CAjCQD,SAAS;AAAAyB,EAAA,GAATzB,SAAS;AAmClB,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}